openapi: 3.0.0
info:
  title: User API
  version: 1.0.0
  description: API for managing users

servers:
  - url: http://localhost:3000/api

paths:
  /auth/sign:
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "400":
          description: User already exists
        "500":
          description: Internal server error
  /auth/login:
    post:
      summary: Login a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User2"
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: Invalid email or password
        "500":
          description: Internal server error

  /posts:
    post:
      summary: Create a new post
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostInput"
      responses:
        "201":
          description: Successful response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Post"
        "401":
          description: Unauthorized
        "500":
          description: Internal server error
    get:
      summary: Get all posts
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  posts:
                    type: array
                    items:
                      $ref: "#/components/schemas/PostSummary"
        "500":
          description: Internal server error

  /posts/{postId}/like:
    post:
      summary: Like a post
      parameters:
        - in: path
          name: postId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Post liked successfully
        "400":
          description: User has already liked the post
        "401":
          description: Unauthorized
        "404":
          description: Post not found
        "500":
          description: Internal server error
  /posts/{postId}/dislike:
    post:
      summary: dislike a post
      parameters:
        - in: path
          name: postId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Post disliked successfully
        "400":
          description: User has already disliked the post
        "401":
          description: Unauthorized
        "404":
          description: Post not found
        "500":
          description: Internal server error
  /posts/{postId}:
    get:
      summary: Get one post
      parameters:
        - in: path
          name: postId
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  posts:
                    type: array
                    items:
                      $ref: "#/components/schemas/PostSummary"
        "500":
          description: Internal server error
    put:
      summary: Update a post
      parameters:
        - in: path
          name: postId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostInput'
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Post not found or unauthorized
        '500':
          description: Internal server error

    delete:
      summary: Delete a post
      parameters:
        - in: path
          name: postId
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Post deleted successfully
        '401':
          description: Unauthorized
        '404':
          description: Post not found or unauthorized
        '500':
          description: Internal server error

components:
  schemas:
    User:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      required:
        - name
        - email
        - password
    User2:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password
    PostInput:
      type: object
      properties:
        title:
          type: string
        desc:
          type: string
        imageUrl:
          type: string
          default: "https://www.shutterstock.com/discover/free-nature-images"
      required:
        - title
    PostSummary:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        desc:
          type: string
        numLikes:
          type: integer
        numDislikes:
          type: integer

    Post:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        desc:
          type: string
        imageUrl:
          type: string
        userId:
          type: integer
        numLikes:
          type: integer
        numDislikes:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
